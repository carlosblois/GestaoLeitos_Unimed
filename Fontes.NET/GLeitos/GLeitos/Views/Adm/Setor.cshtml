@using GLeitos.GLeitosTO
@model GLeitos.Models.SetorView
@{
                /**/

                Layout = "../Layout/_LayoutGLeitos.cshtml";
}


<!--Fundo principal-->
<div class="templatemo-content-container">

    <div class="templatemo-content-container">
        <div class="templatemo-content-widget black-bg">
            <h2 class="margin-bottom-10"><a href="#" onclick="javascript: carregaTela('@Url.Action("ListaSetor", "Adm")');"><i class="arrow-back fa fa-arrow-alt-circle-left fa-fw"></i></a>Setor<a href="#" onclick="javascript: carregaTela('@Url.Action("Index","Adm")');"><i class="fas fa-home fa-fw icon-home" title="Início"></i></a></h2> <!--Título da Página-->
            <!--<p>Here goes another form and form controls.</p>-->

            @using (Html.BeginForm("SalvarSetor", "Adm", FormMethod.Post,
                new { enctype = "multipart/form-data", name = "FormSetor", id = "FormSetor", @class = "templatemo-login-form" }))
            {
                @Html.ValidationSummary(true);

                <div class="row form-group">
                    <div class="col-lg-8 col-md-8 form-group">
                        <label for="inputFirstName">Nome do Setor</label> <!--Nome da Setor-->
                        @Html.HiddenFor(model => model.Setor.id_Setor, new { @id = "id_Setor" })
                        @*<input type="text" class="form-control" id="inputFirstName" placeholder="Setor">*@
                        @Html.TextBoxFor(model => model.Setor.nome_Setor, new { @id = "nome_Setor", @Class = "form-control", @placeholder = "Setor" })
                        <div class="formLine">
                            @Html.ValidationMessageFor(x => x.Setor.nome_Setor, "", new { @class = "text-danger-yellow" })
                        </div>
                    </div>
                    <div class="col-lg-4 col-md-4 form-group">
                        <label for="inputLastName">Código Externo</label> <!--Código Externo-->
                        @*<input type="text" class="form-control" id="inputLastName" placeholder="Insira o Código Externo">*@
                        @Html.TextBoxFor(model => model.Setor.codExterno_Setor, new { @id = "codExterno_Setor", @Class = "form-control", @placeholder = "Código Externo do Setor" })
                        <div class="formLine">
                            @Html.ValidationMessageFor(x => x.Setor.codExterno_Setor, "", new { @class = "text-danger-yellow" })
                        </div>
                    </div>
                </div>


                <div class="row form-group">
                    <div class="col-lg-4 col-md-4 form-group">
                        @Html.HiddenFor(model => model.Setor.id_Empresa, new { @id = "hdnid_Empresa" })
                        <label for="control-label templatemo-block">Empresa</label> <!--Estados-->
                        <div class="custom-select">
                            <select id="selEmpresa" class="form-control" disabled>
                                @foreach (var item in Model.ListaEmpresas.OrderBy(m => m.nome_Empresa))
                                {
                                    if (!string.IsNullOrWhiteSpace(Model.Setor.id_Empresa))
                                    {
                                        if (Model.Setor.id_Empresa == item.id_Empresa.ToUpper().Trim())
                                        {
                                            <option value="@item.id_Empresa" selected>@item.nome_Empresa</option>
                                        }
                                        else
                                        {
                                            <option value="@item.id_Empresa">@item.nome_Empresa</option>
                                        }
                                    }
                                    else
                                    {
                                        <option value="@item.id_Empresa">@item.nome_Empresa</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="formLine">
                            @Html.ValidationMessageFor(x => x.Setor.id_Empresa, "", new { @class = "text-danger-yellow" })
                        </div>
                    </div>
                </div>

                <div class="form-group text-left">
                    <button type="button" class="templatemo-white-button" onclick="javascript: excluir('@Url.Action("ExcluirSetor", "Adm", new {  id_empresa =  Model.Setor.id_Empresa, id_setor = Model.Setor.id_Setor })', 'Deseja excluir este setor?');">Apagar</button>
                    <button type="button" class="templatemo-blue-button" onclick="javascript: salvarsetor('@Url.Action("SalvarSetor", "Adm", new { id_setor = Model.Setor.id_Setor })');">Salvar</button>
                </div>

            }

        </div>
        <footer class="text-right">
            <p>
                Copyright &copy; 2019 Unimed Nordeste-RS
                | Desenvolvido por <a href="http://www.exporj.com.br/" target="s" class="texto-link">ExpoRJ</a>
            </p>
        </footer>
    </div>
</div>
@if (!string.IsNullOrWhiteSpace(Model.mensagem))
{
    <script>emite_msg('@Model.mensagem');</script>
}
@if (!string.IsNullOrWhiteSpace(Model.erro))
{
    <script>emite_msg('@Model.erro');</script>
}
@Scripts.Render("~/scripts/valida.setor.js")