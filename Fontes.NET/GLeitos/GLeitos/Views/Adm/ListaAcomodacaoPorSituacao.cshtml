@using GLeitos.GLeitosTO
@model GLeitos.Models.ListaAcomodacaoPorSituacaoView
@{
    /**/

    Layout = "../Layout/_LayoutGLeitos.cshtml";
}


<!--Fundo principal-->
<div class="templatemo-content-container">

    <div class="templatemo-content-container">
        <div class="templatemo-content-widget black-bg">

            <h2 class="margin-bottom-10">Acomodação Por Situacao<a href="#" onclick="javascript: carregaTela('@Url.Action("Index","Adm")');"><i class="fas fa-home fa-fw icon-home" title="Início"></i></a></h2> <!--Título da Página-->

            <div>
                <!--Botão-->
                <div class="row form-group">
                    <div class="col-lg-3 col-md-3 form-group formLine">
                        @Html.HiddenFor(model => model.id_TipoSituacaoAcomodacao, new { @id = "hdnid_TipoSituacaoAcomodacao" })
                        <label for="control-label templatemo-block">Situação</label>
                        <div class="custom-select">
                            <select id="selTipoSituacao" class="form-control">
                                @foreach (var item in Model.ListaTipoSituacaoAcomodacaoTO.OrderBy(m => m.nome_TipoSituacaoAcomodacao))
                                {
                                    if (!string.IsNullOrWhiteSpace(Model.id_TipoSituacaoAcomodacao))
                                    {
                                        if (Model.id_TipoSituacaoAcomodacao == item.id_TipoSituacaoAcomodacao.ToUpper().Trim())
                                        {
                                            <option value="@item.id_TipoSituacaoAcomodacao" selected>@item.nome_TipoSituacaoAcomodacao</option>
                                        }
                                        else
                                        {
                                            <option value="@item.id_TipoSituacaoAcomodacao">@item.nome_TipoSituacaoAcomodacao</option>
                                        }
                                    }
                                    else
                                    {
                                        <option value="@item.id_TipoSituacaoAcomodacao">@item.nome_TipoSituacaoAcomodacao</option>
                                    }
                                }
                            </select>

                        </div>
                        <div>
                            @Html.ValidationMessageFor(x => x.id_TipoSituacaoAcomodacao, "", new { @class = "text-danger-yellow" })
                        </div>
                    </div>
                    <div class="col-lg-1 col-md-1 form-group formLine">
                        <label for="control-label templatemo-block">&nbsp;&nbsp;</label>
                        <div>
                            <a href="#" onclick="javascript: atualizar('@Url.Action("ListaAcomodacaoPorSituacao", "Adm")');"><button type="button" class="templatemo-green-button margin-bottom-10" id="btn_novo">OK</button></a>
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-3 form-group formLine">
                        @Html.HiddenFor(model => model.id_TipoAtividadeAcomodacao, new { @id = "hdnid_TipoAtividadeAcomodacao" })
                        @*<label for="control-label templatemo-block">Atividade</label>
                            <div class="custom-select">
                                <select id="selTipoAtividade" class="form-control">
                                    @foreach (var item in Model.ListaTipoAtividadeAcomodacaoTO.OrderBy(m => m.nome_TipoAtividadeAcomodacao))
                                    {
                                        if (!string.IsNullOrWhiteSpace(Model.id_TipoAtividadeAcomodacao))
                                        {
                                            if (Model.id_TipoSituacaoAcomodacao == item.id_TipoAtividadeAcomodacao.ToUpper().Trim())
                                            {
                                                <option value="@item.id_TipoAtividadeAcomodacao" selected>@item.nome_TipoAtividadeAcomodacao</option>
                                            }
                                            else
                                            {
                                                <option value="@item.id_TipoAtividadeAcomodacao">@item.nome_TipoAtividadeAcomodacao</option>
                                            }
                                        }
                                        else
                                        {
                                            <option value="@item.id_TipoAtividadeAcomodacao">@item.nome_TipoAtividadeAcomodacao</option>
                                        }
                                    }
                                </select>

                            </div>
                            <div>
                                @Html.ValidationMessageFor(x => x.id_TipoSituacaoAcomodacao, "", new { @class = "text-danger-yellow" })
                            </div>*@
                    </div>
                </div>
            </div>
            <br />
            <table id="tblacomodacao" class="table table-responsive">
                <thead>
                    <tr>
                        <td>Cód. Externo</td>
                        <td>Empresa</td>
                        <td>Setor</td>
                        <td>Acomodação</td>
                        <td>Tipo Acomodação</td>
                        <td>Característica</td>
                        <td>&nbsp;</td>
                    </tr>
                </thead>
                <tbody>
                    @{string urlAcomodacao = ""; }
                    @foreach (var item in Model.ListaAcomodacoesPorSituacao.OrderBy(m => m.codExterno_Acomodacao))
                    {
                        <tr style="height:35px !important;">
                            <td>
                                <p id="nome-empresa">@item.codExterno_Acomodacao.Trim()</p>
                            </td>
                            <td>
                                <p id="nome-empresa">@item.nome_Empresa.Trim()</p>
                            </td>
                            <td>
                                <p id="nome-empresa">@item.nome_Setor.Trim()</p>
                            </td>
                            <td>
                                <p id="nome-empresa">@item.nome_Acomodacao.Trim()</p>
                            </td>
                            <td>
                                <p id="nome-empresa">@item.nome_TipoAcomodacao.Trim()</p>
                            </td>
                            <td>
                                <p id="nome-empresa">@item.nome_CaracteristicaAcomodacao.Trim()</p>
                            </td>

                            <td>
                                @*div class="icon-action">*@
                                @{urlAcomodacao = Model.url_getAcomodacao + item.id_Acomodacao;}
                                @*<a href="#" title="Solicitar Atividade" onclick="javascript: geraratividade('@Url.Action("GerarAtividadeAcomodacao", "Adm", new { id_acomodacao = item.id_Acomodacao , id_SituacaoAcomodacao = item.id_SituacaoAcomodacao})');"><button type="button" class="templatemo-black-button"><i class="fas fa-edit fa-fw"></i></button></a>*@
                                <a href="#" title="Detalhes da Acomodação." onclick="MostraDetalheAcomodacaoAtividade('@urlAcomodacao');return false;"><button type="button" class="templatemo-black-button"><i class="fas fa-edit fa-fw"></i></button></a>
                                @*<a href="#" title="Reservar" onclick="javascript: excluir('@Url.Action("ExcluirAcomodacao", "Adm", new { id_empresa = item.id_Empresa, id_acomodacao = item.id_Acomodacao })', 'Deseja excluir esta acomodação?');"><button type="button" class="templatemo-black-button"><i class="fas fa-trash fa-fw"></i></button></a>*@
                                @*</div>*@
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>

    </div>
    @Html.HiddenFor(model => model.IdUsuarioLogado, new { @id = "hdnIdUsuario" })
    @Html.HiddenFor(model => model.url_isolaAcomodacao, new { @id = "hdnurl_isolaAcomodacao" })
    @Html.HiddenFor(model => model.url_priorizaAcomodacao, new { @id = "hdnurl_priorizaAcomodacao" })
    @Html.HiddenFor(model => model.url_limpezaPlusAcomodacao, new { @id = "hdnurl_limpezaPlusAcomodacao" })
    @Html.HiddenFor(model => model.url_EncaminharAtividade, new { @id = "hdnurl_EncaminharAtividade" })
    @Html.HiddenFor(model => model.url_EncaminharSituacao, new { @id = "hdnurl_EncaminharSituacao" })
    @Html.HiddenFor(model => model.url_getHistoricoAcomodacao, new { @id = "hdnurl_getHistoricoAcomodacao" })
    @Html.HiddenFor(model => model.url_GerarAtividade, new { @id = "hdnurl_GerarAtividade" })
    @Html.HiddenFor(model => model.url_CancelarAtividade, new { @id = "hdnurl_CancelarAtividade" })
    @Html.HiddenFor(model => model.url_getAcomodacao, new { @id = "hdnurl_getAcomodacao" })
    @Html.HiddenFor(model => model.tkn_operacional, new { @id = "hdntkn_operacional" })
    @Html.HiddenFor(model => model.tkn_configuracao, new { @id = "hdntkn_configuracao" })
    @Html.HiddenFor(model => model.tkn_administrativo, new { @id = "hdntkn_administrativo" })
    @Html.HiddenFor(model => model.url_listatipoatividade, new { @id = "hdnurl_listatipoatividade" })
    @Html.HiddenFor(model => model.url_listatiposituacao, new { @id = "hdnurl_listatiposituacao" })

</div>

@if (!string.IsNullOrWhiteSpace(Model.mensagem))
{
    <script>emite_msg('@Model.mensagem');</script>
}

@if (!string.IsNullOrWhiteSpace(Model.erro))
{
    <script>emite_msg('@Model.erro');</script>
}

@Scripts.Render("~/scripts/paginar.acomodacaoporsituacao.js")